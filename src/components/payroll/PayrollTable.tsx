
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { FileText, Download, Eye } from 'lucide-react';
import { useToast } from "@/hooks/use-toast";

interface PayrollEmployee {
  id: string;
  name: string;
  baseSalary: number;
  bonuses: number;
  deductions: number;
  netPay: number;
  status: 'Processed' | 'Pending';
}

interface PayrollTableProps {
  payrollData: PayrollEmployee[];
}

const PayrollTable = ({ payrollData }: PayrollTableProps) => {
  const { toast } = useToast();

  const handleViewPayslip = (employeeId: string, employeeName: string) => {
    toast({
      title: "Payslip Generated",
      description: `Payslip for ${employeeName} is ready for viewing`,
    });
  };

  const handleDownloadPayslip = (employeeId: string, employeeName: string) => {
    // Generate payslip content
    const payslipContent = `
PAYSLIP - ${employeeName}
========================
Employee ID: ${employeeId}
Pay Period: June 2024
Generated: ${new Date().toLocaleDateString()}

EARNINGS:
---------
Basic Salary: $${payrollData.find(emp => emp.id === employeeId)?.baseSalary.toLocaleString()}
Bonuses: $${payrollData.find(emp => emp.id === employeeId)?.bonuses.toLocaleString()}

DEDUCTIONS:
-----------
Tax Deductions: $${payrollData.find(emp => emp.id === employeeId)?.deductions.toLocaleString()}

NET PAY: $${payrollData.find(emp => emp.id === employeeId)?.netPay.toLocaleString()}

This is an official payslip generated by the HR system.
    `;

    const blob = new Blob([payslipContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `payslip_${employeeName.replace(/\s+/g, '_')}_${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);

    toast({
      title: "Payslip Downloaded",
      description: `Payslip for ${employeeName} has been downloaded`,
    });
  };

  return (
    <div className="overflow-hidden">
      <Table>
        <TableHeader>
          <TableRow>
            <TableHead>Employee</TableHead>
            <TableHead>Base Salary</TableHead>
            <TableHead>Bonuses</TableHead>
            <TableHead>Deductions</TableHead>
            <TableHead>Net Pay</TableHead>
            <TableHead>Status</TableHead>
            <TableHead>Actions</TableHead>
          </TableRow>
        </TableHeader>
        <TableBody>
          {payrollData.map((employee) => (
            <TableRow key={employee.id} className="hover:bg-gray-50">
              <TableCell className="font-medium">{employee.name}</TableCell>
              <TableCell>${employee.baseSalary.toLocaleString()}</TableCell>
              <TableCell>${employee.bonuses.toLocaleString()}</TableCell>
              <TableCell>${employee.deductions.toLocaleString()}</TableCell>
              <TableCell className="font-semibold">${employee.netPay.toLocaleString()}</TableCell>
              <TableCell>
                <Badge variant={employee.status === 'Processed' ? 'default' : 'secondary'}>
                  {employee.status}
                </Badge>
              </TableCell>
              <TableCell>
                <div className="flex gap-2">
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => handleViewPayslip(employee.id, employee.name)}
                  >
                    <Eye className="w-4 h-4 mr-1" />
                    View
                  </Button>
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => handleDownloadPayslip(employee.id, employee.name)}
                  >
                    <Download className="w-4 h-4 mr-1" />
                    Download
                  </Button>
                </div>
              </TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </div>
  );
};

export default PayrollTable;
